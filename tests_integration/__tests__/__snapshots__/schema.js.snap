// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schema 1`] = `
Object {
  "$schema": "http://json-schema.org/draft-04/schema#",
  "allOf": Array [
    Object {
      "$ref": "#/definitions/optionsDefinition",
    },
    Object {
      "$ref": "#/definitions/overridesDefinition",
    },
  ],
  "definitions": Object {
    "optionsDefinition": Object {
      "properties": Object {
        "bracketSpacing": Object {
          "default": true,
          "description": "Print spaces between brackets.",
          "type": "boolean",
        },
        "jsxBracketSameLine": Object {
          "default": false,
          "description": "Put > on the last line instead of at a new line.",
          "type": "boolean",
        },
        "parser": Object {
          "default": "babylon",
          "description": "Which parser to use.",
          "oneOf": Array [
            Object {
              "description": "Flow",
              "enum": Array [
                "flow",
              ],
            },
            Object {
              "description": "JavaScript",
              "enum": Array [
                "babylon",
              ],
            },
          ],
        },
        "printWidth": Object {
          "default": 80,
          "description": "The line length where Prettier will try wrap.",
          "type": "integer",
        },
        "semi": Object {
          "default": true,
          "description": "Print semicolons.",
          "type": "boolean",
        },
        "singleQuote": Object {
          "default": false,
          "description": "Use single quotes instead of double quotes.",
          "type": "boolean",
        },
        "tabWidth": Object {
          "default": 2,
          "description": "Number of spaces per indentation level.",
          "type": "integer",
        },
        "trailingComma": Object {
          "default": "none",
          "description": "Print trailing commas wherever possible when multi-line.",
          "oneOf": Array [
            Object {
              "description": "No trailing commas.",
              "enum": Array [
                "none",
              ],
            },
            Object {
              "description": "Trailing commas where valid in ES5 (objects, arrays, etc.)",
              "enum": Array [
                "es5",
              ],
            },
            Object {
              "description": "Trailing commas wherever possible (including function arguments).",
              "enum": Array [
                "all",
              ],
            },
          ],
        },
        "useTabs": Object {
          "default": false,
          "description": "Indent with tabs instead of spaces.",
          "type": "boolean",
        },
      },
      "type": "object",
    },
    "overridesDefinition": Object {
      "properties": Object {
        "overrides": Object {
          "description": "Provide a list of patterns to override prettier configuration.",
          "items": Object {
            "additionalProperties": false,
            "properties": Object {
              "excludeFiles": Object {
                "description": "Exclude these files from this override.",
                "oneOf": Array [
                  Object {
                    "type": "string",
                  },
                  Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                  },
                ],
              },
              "files": Object {
                "description": "Include these files in this override.",
                "oneOf": Array [
                  Object {
                    "type": "string",
                  },
                  Object {
                    "items": Object {
                      "type": "string",
                    },
                    "type": "array",
                  },
                ],
              },
              "options": Object {
                "$ref": "#/definitions/optionsDefinition",
                "description": "The options to apply for this override.",
                "type": "object",
              },
            },
            "required": Array [
              "files",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
  },
  "title": "Schema for .prettierrc",
  "type": "object",
}
`;
